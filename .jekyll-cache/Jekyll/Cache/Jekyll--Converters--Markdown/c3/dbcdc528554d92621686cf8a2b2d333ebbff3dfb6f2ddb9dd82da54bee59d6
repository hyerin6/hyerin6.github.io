I"y<h3 id="1-spring-security">1. Spring Security</h3>
<h4 id="1-authentication-authorization">1) authentication authorization</h4>
<p><strong>authentication</strong> <br />
사용자의 신원을 식별하는 기능이다. 쉽게 말해서 로그인 기능, 로그인 아이디와 비밀번호를 사용하여 사용자 신원을 확인하는 방법이다.</p>

<p><strong>authorization</strong>  <br />
권한 관리 기능이다. <br />
현재 사용자가 어떤 권한을 가지고 있는지 이 기능을 실행할 수 있는 권한은 무엇인지의 정보를 바탕으로 권한 관리 및 통제를 수행한다.</p>

<p><strong>role</strong> <br />
authorization 에서 권한을 역할(role) 이라고 부르기도 한다.  <br />
예) 관리자 권한 = 관리자 역할 <br />
spring security 에서 권한(역할)은 다음과 같이 표현하는 것이 관례이다. <br />
예) ROLE_ADMIN, ROLE_STUDENT</p>

<h4 id="2-spring-security">2) Spring Security</h4>
<p>authentication 기능, authorization 기능, 보안 공격에 대한 보호 기능 등이 잘 구현된 프레임워크이다. <br />
spring security 를 이용해서 로그인 기능과 권한관리 기능을 구현하는 것이 바람직하다.</p>

<h4 id="3-spring-security-확장-태그">3) Spring Security 확장 태그</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="err">%@</span> <span class="na">taglib</span> <span class="na">uri=</span><span class="s">"http://www.springframework.org/security/tags"</span> <span class="na">prefix=</span><span class="s">"sec"</span> <span class="err">%</span><span class="nt">&gt;</span> 
</code></pre></div></div>
<p>spring security 확장 태그를 사용하기 위한 선언이다. JSP 파일의 선두에 이 선언이 있어야 한다.</p>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;sec:authorize </span><span class="na">access=</span><span class="s">"authenticated"</span><span class="nt">&gt;</span> 
   . . .
<span class="nt">&lt;/sec:authorize&gt;</span>
</code></pre></div></div>
<p>spring security 확장 태그이다. <br />
현재 사용자가 로그인한 사용자인 경우에만 이 태그 사이의 내용이 출력된다.</p>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;sec:authentication </span><span class="na">property=</span><span class="s">"user.loginId"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>
<p>현재 로그인된 사용자 객체의 loginId 속성값을 출력한다.     <br />
즉 User 객체의 getLoginId() 메소드 리턴값이 출력된다.</p>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;sec:authentication </span><span class="na">property=</span><span class="s">"user.name"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>
<p>현재 로그인된 사용자 객체의 name 속성값을 출력한다.</p>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;sec:authentication </span><span class="na">property=</span><span class="s">"user.email"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>
<p>현재 로그인된 사용자 객체의 email 속성값을 출력한다.</p>

<h4 id="4-spring-security-권한-검사">4) Spring Security 권한 검사</h4>
<p><strong>@Secured(“ROLE_ADMINISTRATOR”)</strong>  <br />
이 어노테이션을 액션 메소드에 붙이면 그 액션 메소드는 “ROLE_ADMINISTRATOR” 권한을 가진 사용자만 실행할 수 있다. <br />
이 권한이 없는 사용자가 실행하면 에러가 발생한다. 클래스에 붙였을 때도 권한이 없는 사용자가 실행하면 마찬가지로 에러가 발생한다.</p>

<p><strong>request.IsUserInRole(String role)</strong> <br />
Java 코드에서 현재 사용자 권한을 검사할 때, 이 메소드를 사용한다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/user/index.do"</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">index</span><span class="o">(</span><span class="nc">Model</span> <span class="n">model</span><span class="o">,</span> <span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">isUserInRole</span><span class="o">(</span><span class="s">"ROLE_PROFESSOR"</span><span class="o">))</span>
        <span class="k">return</span> <span class="s">"redirect:professor"</span><span class="o">;</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">isUserInRole</span><span class="o">(</span><span class="s">"ROLE_ADMINISTRATOR"</span><span class="o">))</span>
        <span class="k">return</span> <span class="s">"redirect:adminostrator"</span><span class="o">;</span>
    <span class="k">return</span> <span class="s">"redirect:student"</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><strong>뷰에서 사용자 권한을 검사할 때</strong></p>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;sec:authorize </span><span class="na">access=</span><span class="s">"hasRole('ROLE_ADMINISTRATOR')"</span><span class="nt">&gt;</span>
   . . .
<span class="nt">&lt;/sec:authorize&gt;</span>
</code></pre></div></div>
<p>현재 사용자가 ROLE_ADMINISTRATOR 권한일 경우에 이 태그와 사이 내용을 출력한다.</p>
:ET