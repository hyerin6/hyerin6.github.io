I"a	<p><br /></p>

<p>회의 결과 카카오 로그인과 네이버 로그인을 사용하여 회원 인증을 하기로 했다.   <br />
나의 담당은 카카오 로그인이고 아직 프론트 개발자분들과 회의를 하기 전이라 자세한건 변경될 수 있지만 <br />
access token으로 사용자 정보를 가져오는 <a href="https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#req-user-info">kakao api</a>를 사용하는걸 미리 구현해봤다.</p>

<p><br /></p>

<h2 id="spring-webflux">Spring webflux</h2>

<p>Spring MVC는 기본적으로 블로킹이고 동기방식을 사용한다. 비동기 처리 기능이 스프링 프레임워크3에서 추가되었지만   <br />
서블릿은 응답을 기다리는 동안 pool의 스레드들은 여전히 지연시킬 수 있기 때문에 전체 stack이 reactive 해야 하는 요구를 충족시킬 수 없다.       <br />
이러한 문제를 해결할 수 있도록 스프링 프레임워크5에 도입된 대안적인 모듈이 webflux이다. <br />
웹 요청을 reactive하게 다루는데에 초점이 맞춰져있다.</p>

<p>기존의 서블릿 기반의 spring boot는 tomcat을 기반으로 동작한다. <br />
반면 spring boot webflux는 여러가지 고를 수 있는데 디폴트로 netty를 사용한다.</p>

<ul>
  <li>Tomcat - 하나의 요청에 하나의 스레드가 동작</li>
  <li>Netty - 1개의 이벤트를 받는 스레드와 다수의 worker 스레드로 동작</li>
</ul>

<p>위 내용은 webflux에 대해 알아보면서 메모한 것이고 다음 포스팅들을 참고했다.</p>

<p><a href="https://engineering.linecorp.com/ko/blog/reactive-streams-with-armeria-1/">라인 테크 블로그 - Reactive Streams와 놀자!</a>  <br />
<a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web-reactive.html#webflux">spring.io - webflux</a></p>

<p><br /></p>

<h2 id="구현">구현</h2>

<p><img src="https://user-images.githubusercontent.com/33855307/96071771-c4f6c500-0edd-11eb-8cf7-e24cee35b390.jpeg" alt="KakaoTalk_Photo_2020-10-15-11-58-28" /></p>

<p>kakao api 중 사용자 정보 요청 (/v2/user/me)을 사용했는데 response가 조금 복잡해보인다.        <br />
우선 error response는 static inner class로 작성했고, kakao_account는 따로 클래스를 만들어주고 inner class로 Profile을 정의했다.</p>

:ET